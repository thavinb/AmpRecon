# Copyright (C) 2023 Genome Surveillance Unit/Genome Research Ltd.

Bootstrap: docker
From: ubuntu:18.04

%labels
Maintainer Thomas Maddison
Build 1.0
Samtools 1.22
BCFTools 1.22
BWA 0.7.17
Python 3.6.5
Biobambam2 2.0.79
# Bambi 0.11.1
Staden 1.14.9

# set up environment
%environment
    # Add the Miniconda3 binaries to the PATH
    PATH=/opt/conda/bin:$PATH

    # Set path for staden libraries
    export LD_LIBRARY_PATH=/usr/local/lib

    # Set the library path, include path, and pkg-config path to system default
    # The aim of these values is to avoid issues with package installation
    export LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/
    export C_INCLUDE_PATH=/usr/include/
    export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig/

    export LC_ALL=C
    export LC_NUMERIC=en_GB.UTF-8
    export PATH="/opt/miniconda/bin:$PATH"


    # Add the biobambam2 binary to the environment path
    PATH=/opt/conda/envs/biobambam-2.0.79/bin:$PATH

%post
    DEBIAN_FRONTEND=noninteractive
    # Software version variables
    BIOBAMBAM2_VERSION=2.0.79-0
    HTSLIB_VERSION=1.22 # also for samtools and bcftools
    BAMBI_VERSION=0.11.1
    BWA_VERSION=0.7.17
    STADEN_VERSION=1.14.9
    STADEN_TAG=io_lib-1-14-9
    S3CMD_VERSION=2.0.1
    # Install requirements ---------------------
    apt update
    #apt upgrade -y
    DEBIAN_FRONTEND=noninteractive \
    apt install -y wget git zlib1g zlib1g-dev libbz2-dev libncurses5-dev \
                curl unzip liblzma-dev libcurl4-openssl-dev \
                software-properties-common apt-transport-https \
                libssl-dev gcc wget \
                make perl bzip2 gnuplot ca-certificates gawk python3 \
                git libtool pkg-config libpython3-dev libxml2-dev \
                bzip2 libncurses-dev checkinstall autoconf libgsl-dev \
                libgd-dev nano python3-pip #python-dev libgd2-xpm-dev

    # Setup Conda
    cd /opt
    rm -fr miniconda
    wget https://repo.continuum.io/miniconda/Miniconda3-4.7.12-Linux-x86_64.sh -O miniconda.sh
    bash miniconda.sh -b -p /opt/miniconda
    export PATH="/opt/miniconda/bin:$PATH"

    # Configure Conda to use the bioconda channel
    conda config --add channels bioconda
    # Install biobambam2 from conda
    conda install -y biobambam=${BIOBAMBAM2_VERSION}
    mkdir /app/
    cd /app/

    # add python requirements
    pip install --upgrade pip
    pip install pandas

    # Install S3cmd - assumes .s3cfg already exists in home directory
    pip install s3cmd==${S3CMD_VERSION}

    # Setup HTSLib
    wget -O "htslib.tar.gz" https://github.com/samtools/htslib/releases/download/${HTSLIB_VERSION}/htslib-${HTSLIB_VERSION}.tar.bz2
    tar -xf htslib.tar.gz
    cd htslib-${HTSLIB_VERSION}
    autoheader
    autoreconf -i  # Build the configure script and install files it uses
    ./configure --prefix=/usr/local/   # Optional but recommended, for choosing extra functionality
    make
    make install

    # Install software ---------------------
    cd /app/

    # --- | BAMBI | ------------------------------------------------------------------------------|
    # Retrieve and compile Bambi
    #git clone https://github.com/wtsi-npg/bambi.git
    #cd bambi/
    #git checkout ${BAMBI_VERSION}
    #autoreconf -i
    #./configure
    ##fix Makefile.am
    ## 1) add a new CPP flag is add to set where htslib should be found (-I/usr/local/include/htslib/)
    #sed -i 's|AM_CPPFLAGS =.*|AM_CPPFLAGS = -I$(top_srcdir)/src $(HTSLIB_CPPFLAGS) -I/usr/local/include/htslib/ -std=gnu99 -Werror|g' Makefile.am
    ## 2) set library inks for libgd zlib and lhts 
    #sed -i 's|AM_LDFLAGS =.*|AM_LDFLAGS = -rdynamic $(HTSLIB_LDFLAGS) -lgd -lz -lhts|g' Makefile.am

    #make
    #make install
    
    --- | BCFTOOLS | ---------------------------------------------------------------------------|
    # Retrieve and compile BCFTools
    cd /app/
    wget -O "bcftools.tar.gz" https://github.com/samtools/bcftools/releases/download/${HTSLIB_VERSION}/bcftools-${HTSLIB_VERSION}.tar.bz2
    tar xf bcftools.tar.gz
    cd bcftools-${HTSLIB_VERSION}
    autoheader
    autoconf 
    ./configure --enable-libgsl 
    make
    mv bcftools /usr/local/bin
    cd /app/

    # --- | SAMTOOLS | ---------------------------------------------------------------------------|
    # Retrieve and compile Samtools
    wget -O "samtools.tar.gz" https://github.com/samtools/samtools/releases/download/${HTSLIB_VERSION}/samtools-${HTSLIB_VERSION}.tar.bz2
    tar xf samtools.tar.gz
    cd samtools-${HTSLIB_VERSION}
    autoheader
    autoconf -Wno-syntax
    ./configure --prefix /usr/local
    make
    make install
    cd /app/

    # --- | BWA | --------------------------------------------------------------------------------|
    # Retrieve and compile BWA
    wget -O "bwa-${BWA_VERSION}.tar.gz" https://github.com/lh3/bwa/archive/v${BWA_VERSION}.tar.gz
    tar xf bwa-${BWA_VERSION}.tar.gz
    cd bwa-${BWA_VERSION}
    make &&  mv bwa /usr/local/bin
    cd ..
    
    # --- | Staden | -----------------------------------------------------------------------------|
    # Retrieve and compile Staden
    cd /tmp
    wget https://github.com/jkbonfield/io_lib/releases/download/${STADEN_TAG}/io_lib-${STADEN_VERSION}.tar.gz
    tar -xvzf io_lib-${STADEN_VERSION}.tar.gz \
    && rm /tmp/io_lib-${STADEN_VERSION}.tar.gz
    cd /tmp/io_lib-${STADEN_VERSION}
    ./configure
    make && make install
    cd /app/

    # --- | FastQC | -----------------------------------------------------------------------------|
    # Retrieve and compile Staden

    # --- | MultiQC | -----------------------------------------------------------------------------|
    # Retrieve and compile Staden
    
    
    
    
    
    # Cleanup
    conda clean -y --all
    rm -fr htslib* samtools* bcf* bwa* *.tar.gz /opt/miniconda.sh /tmp/io_lib-${STADEN_VERSION}
    apt autoremove --purge
    apt clean

%test
    # Verify that the software installed correctly and are accessible in the PATH
    # bwa
    bwa -h
    # bambi
    bambi select
    # samtools
    samtools
    # standen
    scramble -h
    # bcftools
    bcftools --version
    # biobambam2 check
    bamadapterclip -h
    bamadapterfind -h
    bamtofastq -h
    bamsort -h
    # python3
    python3 --version
    python3 -c "import pandas"
