// Copyright (C) 2023 Genome Surveillance Unit/Genome Research Ltd.

profiles {

    standard {
        singularity {
            enabled = true
            cacheDir = "${projectDir}/containers"
        }
    }

    bmrc {
        singularity {
            enabled = true
            cacheDir = "${projectDir}/containers"
        }

        process {
            queue = "short"
            errorStrategy = {task.attempt <= 3 ? 'retry' : 'terminate'}
            maxRetries = 2

        }

        executor {
            name = "slurm"
            queueSize = 50
            pollInterval = "5 sec"
            submitRateLimit = '60sec'
            cpus = 1
            memory = "8GB"
        }
    }

    run_locally {
        docker {
            enabled = false
        }
        singularity {
            enabled = false
        }
    }

    sanger_local {
        docker {
            enabled = false
        }
        singularity {
            enabled = true
            autoMounts = true
            cacheDir = "$PWD"
            runOptions = "--bind /lustre,/nfs,/software"
        }
        process {
            errorStrategy = {task.attempt <= 1 ? "retry" : "terminate"}
            maxRetries = 1
            // terminate if irods manifest is not valid
            withName:validate_irods_mnf {
                errorStrategy = "terminate"
            }
        }
        executor {
            name="local"
            cpus=30
            memory="80GB"
        }
    }

    // Basic configuration to run locally at Sanger farm
    sanger_default {
        docker {
            enabled = false
        }
        singularity {
            enabled = true
            autoMounts = true
            cacheDir = "$PWD"
            runOptions = "--bind /lustre,/nfs,/software"
        }
        executor {
            $local {
                cpus = 16
                memory = "32GB"
            }
            $lsf {
                perJobMemLimit = true
                // Maximum number of jobs to spawn at once - adjust as necessary
                // queueSize = params.queue_size
                jobName = { "ampseq_nf_pipeline - $task.name - $task.hash" }
                pollInterval = "5 sec"
            }
        }
    }

    // Basic configuration for an LSF environment at Sanger
    sanger_lsf {
        docker {
            enabled = false
        }

        singularity {
            enabled = true
            autoMounts = true
            cacheDir = "./"
            runOptions = "--bind /lustre,/nfs,/software"
        }

        process {
            memory = "8GB"
            queue = "normal"
            errorStrategy = {task.attempt <= 3 ? 'retry' : 'terminate'}
            maxRetries = 2

            // terminate if irods manifest is not valid
            withName:validate_irods_mnf {
                errorStrategy = "terminate"
            }
        }

        executor {
            name = "lsf"
            perJobMemLimit = true
            // Maximum number of jobs to spawn at once - adjust as necessary
            // queueSize = params.queue_size
            jobName = { "ampseq_nf_pipeline - $task.name - $task.hash" }
            pollInterval = "5 sec"
        }
    }

    sanger_tower {

        docker { 
            enabled = false
        }

        singularity {
            enabled = true
            autoMounts = true
            runOptions = "--bind /lustre,/nfs,/software"
        }

        process {
            cpus=1
            memory="8GB"
            errorStrategy = {task.attempt <= 2 ? "retry" : "terminate"}
            maxRetries = 5

            withName: decode {
                cache = "deep"
            }
        }

        withName:validate_irods_mnf {
            errorStrategy = "terminate"
        }


        executor {
            name = "local"
        }
    }
}

